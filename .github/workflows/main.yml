name: GitHub Actions for Frontend

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3  

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up Docker cache 
      - name: Cache Docker layers
        uses: actions/cache@v3  
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Install dependencies and run tests (security analysis)
      - name: Install Dependencies and run tests
        run: |
          npm install
          npm audit --production --json | tee audit-results.json

      # Run Snyk Security scan on dependencies
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Generate commit SHA for Docker image tag
      - name: Generate Commit SHA for Image Tag
        id: set_image_tag
        run: |
          IMAGE_TAG="${{ github.sha }}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "Generated IMAGE_TAG: $IMAGE_TAG"  # Debugging log to verify IMAGE_TAG

      # Build Docker image with commit SHA as tag
      - name: Build Docker image
        run: |
            IMAGE_TAG="${{ github.sha }}"
            echo "Building Docker image with tag: $IMAGE_TAG"  # Ensure IMAGE_TAG is not empty
            docker build -t fclone29/react-demo:$IMAGE_TAG .

      # Run Trivy Security scan on Docker image
      - name: Scan Docker image with Trivy for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
            image-ref: fclone29/react-demo:${{ env.IMAGE_TAG }}
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push Docker image to Docker Hub or GitHub Container Registry
      - name: Push Docker image to Registry
        run: |
            echo "Pushing Docker image: fclone29/react-demo:$IMAGE_TAG"  # Verify tag before pushing
            docker push fclone29/react-demo:$IMAGE_TAG      

      # Notify via Slack on Success (with Blocks)
      - name: Notify via Slack on Success
        if: success()
        uses: slackapi/slack-github-action@v2.1.1 
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK }}
          webhook-type: incoming-webhook
          payload: |
            text: "Deployment successful for commit ${{ github.sha }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Deployment Successful*"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Commit SHA*: ${{ github.sha }}"
                  - type: "mrkdwn"
                    text: "*Image Tag*: $IMAGE_TAG"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|View Commit>"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "Deployment was successful for this commit. üéâ"

      # Notify via Slack on Failure (with Blocks)
      - name: Notify via Slack on Failure
        if: failure()
        uses: slackapi/slack-github-action@v2.1.1  
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK }}
          webhook-type: incoming-webhook
          payload: |
            text: "Deployment failed for commit ${{ github.sha }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Deployment Failed*"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Commit SHA*: ${{ github.sha }}"
                  - type: "mrkdwn"
                    text: "*Image Tag*: $IMAGE_TAG"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|View Commit>"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "Deployment failed for this commit. Please check logs. ‚ö†Ô∏è"
